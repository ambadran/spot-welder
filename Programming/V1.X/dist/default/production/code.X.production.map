Microchip MPLAB XC8 Compiler V2.31

Linker command line:

-W-3 --edf=C:\Program Files\Microchip\xc8\v2.31\pic\dat\en_msgs.txt -cn \
  -h+dist/default/production\code.X.production.sym \
  --cmf=dist/default/production\code.X.production.cmf -z -Q16F628A \
  -oC:\Users\ambad\AppData\Local\Temp\smsg.2 --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/code.X.production.map -E1 -ver=XC8 Compiler \
  --acfsm=1493 -ASTACK=0C0h-0EFh -pstack=STACK -ACODE=00h-07FFh \
  -ASTRCODE=00h-07FFh -ASTRING=00h-0FFhx8 -ACONST=00h-0FFhx8 \
  -AENTRY=00h-0FFhx8 -ACOMMON=070h-07Fh -ABANK0=020h-06Fh -ABANK1=0A0h-0EFh \
  -ABANK2=0120h-014Fh -ARAM=020h-06Fh,0A0h-0EFh,0120h-014Fh \
  -AABS1=020h-07Fh,0A0h-0EFh,0120h-014Fh -ASFR0=00h-01Fh -ASFR1=080h-09Fh \
  -ASFR2=0100h-011Fh -ASFR3=0180h-01EFh -ACONFIG=02007h-02007h -DCONFIG=2 \
  -AIDLOC=02000h-02003h -DIDLOC=2 -AEEDATA=00h-07Fh/02100h \
  -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 \
  -DENTRY=2 -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE \
  -pcinit=CODE -pfunctab=ENTRY -k C:\Users\ambad\AppData\Local\Temp\smsg.o \
  dist/default/production\code.X.production.o 

Object code version is 3.11

Machine type is 16F628A



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\ambad\AppData\Local\Temp\smsg.o
                end_init                             10       10        1        8       0
                reset_vec                             0        0        1        0       0
                config                             2007     2007        1        0       4
dist/default/production\code.X.production.o
                cinit                                11       11       11        8       0
                intentry                              4        4        C        8       0
                config                             2007     2007        1        0       4
                text15                              3E9      3E9       22      3E0       0
                text14                              45E      45E       12      3E0       0
                text13                              484      484        5      3E0       0
                text12                              2BE      2BE       41      3E0       0
                text11                              33E      33E       3B      3E0       0
                text10                              3B3      3B3       36      3E0       0
                text9                               239      239       44      3E0       0
                text8                               42B      42B       20      3E0       0
                text7                               44B      44B       13      3E0       0
                text6                               2FF      2FF       3F      3E0       0
                text5                               47F      47F        5      3E0       0
                text4                               1F0      1F0       49      3E0       0
                text3                               27D      27D       41      3E0       0
                text2                               379      379       3A      3E0       0
                text1                                DB       DB       9C        8       0
                maintext                             22       22       B9        8       0
                cstackBANK0                          20       20       3A       20       1
                cstackCOMMON                         70       70        C       70       1
                inittext                            470      470        F      3E0       0
                dataBANK1                            A0       A0       20       A0       1
                bssBANK0                             5A       5A        5       20       1
                strings                             177      177       79      2EE       0
                idataBANK1                          40B      40B       20      3E0       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             10       10        1         0
                cinit                                11       11       11         0
                intentry                              4        4        C         0
                reset_vec                             0        0        1         0
                text15                              3E9      3E9       22         0
                text14                              45E      45E       12         0
                text13                              484      484        5         0
                text12                              2BE      2BE       41         0
                text11                              33E      33E       3B         0
                text10                              3B3      3B3       36         0
                text9                               239      239       44         0
                text8                               42B      42B       20         0
                text7                               44B      44B       13         0
                text6                               2FF      2FF       3F         0
                text5                               47F      47F        5         0
                text4                               1F0      1F0       49         0
                text3                               27D      27D       41         0
                text2                               379      379       3A         0
                text1                                DB       DB       9C         0
                maintext                             22       22       B9         0
                inittext                            470      470        F         0
                idataBANK1                          40B      40B       20         0

        CLASS   STRCODE        

        CLASS   STRING         
                strings                             177      177       79         0

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        C         1

        CLASS   BANK0          
                cstackBANK0                          20       20       3A         1
                bssBANK0                             5A       5A        5         1

        CLASS   BANK1          
                dataBANK1                            A0       A0       20         1

        CLASS   BANK2          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        1         4

        CLASS   IDLOC          

        CLASS   EEDATA         

        CLASS   BANK3          



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000001  000001         0       0  CODE        2
                intentry                       000004  000173  000177         8       0  CODE        2
                cstackBANK0                    000020  00003F  00005F        20       1  BANK0       1
                cstackCOMMON                   000070  00000C  00007C        70       1  COMMON      1
                dataBANK1                      0000A0  000020  0000C0        A0       1  BANK1       1
                strings                        000177  000079  0001F0       2EE       0  STRING      2
                text4                          0001F0  000299  000489       3E0       0  CODE        2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            005F-006F             11           1
        BANK1            00C0-00EF             30           1
        BANK2            0120-014F             30           1
        CODE             0001-0003              3           2
                         0489-07FF            377
        COMMON           007C-007D              2           1
        CONST            0001-0003              3           2
                         0489-07FF            100
        EEDATA           2100-217F             80           2
        ENTRY            0001-0003              3           2
                         0489-07FF            100
        IDLOC            2000-2003              4           2
        RAM              005F-006F             11           1
                         00C0-00EF             30
                         0120-014F             30
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-011F             20           1
        SFR3             0180-01EF             70           1
        STACK            00C0-00EF             30           1
        STRCODE          0001-0003              3           2
                         0489-07FF            377
        STRING           0001-0003              3           2
                         0489-07FF            100

                                  Symbol Table

LCD_CMD@CMD                  cstackBANK0  0026
LCD_DATA@Data                cstackBANK0  0024
LCD_Set_Cursor@High4         cstackBANK0  002C
LCD_Set_Cursor@Low4          cstackBANK0  002B
LCD_Set_Cursor@Temp          cstackBANK0  002D
LCD_Set_Cursor@c             cstackBANK0  0027
LCD_Set_Cursor@r             cstackBANK0  002A
LCD_Write_Char@Data          cstackBANK0  0028
LCD_Write_Char@High4         cstackBANK0  0027
LCD_Write_Char@Low4          cstackBANK0  0026
LCD_Write_String@i           cstackBANK0  002E
LCD_Write_String@str         cstackBANK0  0029
_C2INV                       (abs)        00FD
_C2OUT                       (abs)        00FF
_CM0                         (abs)        00F8
_CM1                         (abs)        00F9
_CM2                         (abs)        00FA
_CMIE                        (abs)        0466
_CMIF                        (abs)        0066
_GIE                         (abs)        005F
_ISR                         text9        0239
_LCD_CMD                     text7        044B
_LCD_Clear                   text5        047F
_LCD_DATA                    text8        042B
_LCD_Init                    text6        02FF
_LCD_Set_Cursor              text4        01F0
_LCD_Write_Char              text3        027D
_LCD_Write_String            text2        0379
_OSCF                        (abs)        0473
_PEIE                        (abs)        005E
_RA0                         (abs)        0028
_RA6                         (abs)        002E
_RA7                         (abs)        002F
_RB0                         (abs)        0030
_RB1                         (abs)        0031
_RB2                         (abs)        0032
_RB3                         (abs)        0033
_RB4                         (abs)        0034
_RB5                         (abs)        0035
_RB6                         (abs)        0036
_RB7                         (abs)        0037
_TRISA0                      (abs)        0428
_TRISA6                      (abs)        042E
_TRISA7                      (abs)        042F
_TRISB                       (abs)        0086
_TRISB0                      (abs)        0430
_TRISB1                      (abs)        0431
_TRISB6                      (abs)        0436
_TRISB7                      (abs)        0437
__Habs1                      abs1         0000
__Hbank0                     bank0        0000
__Hbank1                     bank1        0000
__Hbank2                     bank2        0000
__Hbank3                     bank3        0000
__HbssBANK0                  bssBANK0     0000
__Hcinit                     cinit        0022
__Hclrtext                   clrtext      0000
__Hcode                      code         0000
__Hcommon                    common       0000
__Hconfig                    config       2008
__HcstackBANK0               cstackBANK0  0000
__HcstackCOMMON              cstackCOMMON 0000
__HdataBANK1                 dataBANK1    0000
__Heeprom_data               eeprom_data  0000
__Hend_init                  end_init     0011
__Hfunctab                   functab      0000
__HidataBANK1                idataBANK1   0000
__Hinit                      init         0010
__Hinittext                  inittext     0000
__Hintentry                  intentry     0010
__Hmaintext                  maintext     0000
__Hpowerup                   powerup      0000
__Hram                       ram          0000
__Hreset_vec                 reset_vec    0001
__Hsfr0                      sfr0         0000
__Hsfr1                      sfr1         0000
__Hsfr2                      sfr2         0000
__Hsfr3                      sfr3         0000
__Hspace_0                   (abs)        0489
__Hspace_1                   (abs)        00C0
__Hspace_2                   (abs)        0000
__Hspace_3                   (abs)        0000
__Hspace_4                   (abs)        400F
__Hstack                     stack        0000
__Hstrings                   strings      0000
__Htext                      text         0000
__Labs1                      abs1         0000
__Lbank0                     bank0        0000
__Lbank1                     bank1        0000
__Lbank2                     bank2        0000
__Lbank3                     bank3        0000
__LbssBANK0                  bssBANK0     0000
__Lcinit                     cinit        0011
__Lclrtext                   clrtext      0000
__Lcode                      code         0000
__Lcommon                    common       0000
__Lconfig                    config       0000
__LcstackBANK0               cstackBANK0  0000
__LcstackCOMMON              cstackCOMMON 0000
__LdataBANK1                 dataBANK1    0000
__Leeprom_data               eeprom_data  0000
__Lend_init                  end_init     0010
__Lfunctab                   functab      0000
__LidataBANK1                idataBANK1   0000
__Linit                      init         0010
__Linittext                  inittext     0000
__Lintentry                  intentry     0004
__Lmaintext                  maintext     0000
__Lpowerup                   powerup      0000
__Lram                       ram          0000
__Lreset_vec                 reset_vec    0000
__Lsfr0                      sfr0         0000
__Lsfr1                      sfr1         0000
__Lsfr2                      sfr2         0000
__Lsfr3                      sfr3         0000
__Lspace_0                   (abs)        0000
__Lspace_1                   (abs)        0000
__Lspace_2                   (abs)        0000
__Lspace_3                   (abs)        0000
__Lspace_4                   (abs)        0000
__Lstack                     stack        0000
__Lstrings                   strings      0000
__Ltext                      text         0000
__S0                         (abs)        0489
__S1                         (abs)        00C0
__S2                         (abs)        0000
__S3                         (abs)        0000
___int_sp                    stack        0000
___latbits                   (abs)        0000
___sp                        stack        0000
___stackhi                   (abs)        0000
___stacklo                   (abs)        0000
__end_of_ISR                 text9        027D
__end_of_LCD_CMD             text7        045E
__end_of_LCD_Clear           text5        0484
__end_of_LCD_DATA            text8        044B
__end_of_LCD_Init            text6        033E
__end_of_LCD_Set_Cursor      text4        0239
__end_of_LCD_Write_Char      text3        02BE
__end_of_LCD_Write_String    text2        03B3
__end_of__initialization     cinit        0020
__end_of__stringtab          strings      0187
__end_of_main                maintext     00DB
__end_of_update              text1        0177
__end_ofi1_LCD_CMD           text14       0470
__end_ofi1_LCD_Clear         text13       0489
__end_ofi1_LCD_DATA          text15       040B
__end_ofi1_LCD_Set_Cursor    text12       02FF
__end_ofi1_LCD_Write_Char    text11       0379
__end_ofi1_LCD_Write_String  text10       03E9
__initialization             cinit        0011
__pbssBANK0                  bssBANK0     005A
__pcstackBANK0               cstackBANK0  0020
__pcstackCOMMON              cstackCOMMON 0070
__pdataBANK1                 dataBANK1    00A0
__pidataBANK1                idataBANK1   040B
__pintentry                  intentry     0004
__pmaintext                  maintext     0022
__pstrings                   strings      0177
__ptext1                     text1        00DB
__ptext10                    text10       03B3
__ptext11                    text11       033E
__ptext12                    text12       02BE
__ptext13                    text13       0484
__ptext14                    text14       045E
__ptext15                    text15       03E9
__ptext2                     text2        0379
__ptext3                     text3        027D
__ptext4                     text4        01F0
__ptext5                     text5        047F
__ptext6                     text6        02FF
__ptext7                     text7        044B
__ptext8                     text8        042B
__ptext9                     text9        0239
__size_of_ISR                (abs)        0000
__size_of_LCD_CMD            (abs)        0000
__size_of_LCD_Clear          (abs)        0000
__size_of_LCD_DATA           (abs)        0000
__size_of_LCD_Init           (abs)        0000
__size_of_LCD_Set_Cursor     (abs)        0000
__size_of_LCD_Write_Char     (abs)        0000
__size_of_LCD_Write_String   (abs)        0000
__size_of_main               (abs)        0000
__size_of_update             (abs)        0000
__size_ofi1_LCD_CMD          (abs)        0000
__size_ofi1_LCD_Clear        (abs)        0000
__size_ofi1_LCD_DATA         (abs)        0000
__size_ofi1_LCD_Set_Cursor   (abs)        0000
__size_ofi1_LCD_Write_Char   (abs)        0000
__size_ofi1_LCD_Write_String (abs)        0000
__stringbase                 strings      0186
__stringtab                  strings      0177
_allow_welding               bssBANK0     005C
_button1_stat                bssBANK0     005E
_button2_stat                bssBANK0     005D
_choosenValues               bssBANK0     005A
_main                        maintext     0022
_page                        bssBANK0     005B
_update                      text1        00DB
btemp                        (abs)        007E
end_of_initialization        cinit        0020
i1LCD_CMD@CMD                cstackCOMMON 0072
i1LCD_DATA@Data              cstackCOMMON 0070
i1LCD_Set_Cursor@High4       cstackCOMMON 0078
i1LCD_Set_Cursor@Low4        cstackCOMMON 0077
i1LCD_Set_Cursor@Temp        cstackCOMMON 0079
i1LCD_Set_Cursor@c           cstackCOMMON 0073
i1LCD_Set_Cursor@r           cstackCOMMON 0076
i1LCD_Write_Char@Data        cstackCOMMON 0074
i1LCD_Write_Char@High4       cstackCOMMON 0073
i1LCD_Write_Char@Low4        cstackCOMMON 0072
i1LCD_Write_String@i         cstackCOMMON 007A
i1LCD_Write_String@str       cstackCOMMON 0075
i1_LCD_CMD                   text14       045E
i1_LCD_Clear                 text13       0484
i1_LCD_DATA                  text15       03E9
i1_LCD_Set_Cursor            text12       02BE
i1_LCD_Write_Char            text11       033E
i1_LCD_Write_String          text10       03B3
init_fetch0                  inittext     0470
init_ram0                    inittext     0474
interrupt_function           intentry     0004
intlevel0                    functab      0000
intlevel1                    functab      0000
intlevel2                    functab      0000
intlevel3                    functab      0000
intlevel4                    functab      0000
intlevel5                    functab      0000
reset_vec                    reset_vec    0000
saved_w                      (abs)        007E
start                        init         0010
start_initialization         cinit        0011
update@F527                  dataBANK1    00A0
update@button1_tstat         cstackBANK0  0056
update@button2_stat          cstackBANK0  0030
update@page0_user_input      cstackBANK0  0036
update@page_f                cstackBANK0  0031
wtemp0                       (abs)        007E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 77 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       3       0       0
      Totals:         0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels required when called:    8
 This function calls:
		_LCD_Clear
		_LCD_Init
		_LCD_Set_Cursor
		_LCD_Write_String
		_update
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _update *****************
 Defined at:
		line 29 in file "main.c"
 Parameters:    Size  Location     Type
  button1_tsta    1    wreg     unsigned char 
  button2_stat    1   16[BANK0 ] unsigned char 
  page_f          1   17[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  button1_tsta    1   54[BANK0 ] unsigned char 
  page0_user_i   32   22[BANK0 ] unsigned char [16][2]
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0      33       0       0
      Temps:          0       4       0       0
      Totals:         0      39       0       0
Total ram usage:       39 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_LCD_Clear
		_LCD_Set_Cursor
		_LCD_Write_String
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD_Write_String *****************
 Defined at:
		line 113 in file "./LCD.h"
 Parameters:    Size  Location     Type
  str             2    9[BANK0 ] PTR unsigned char 
		 -> STR_11(1), STR_10(14), STR_9(1), STR_8(13), 
		 -> STR_7(17), STR_6(16), STR_5(1), STR_4(14), 
		 -> STR_3(16), STR_2(16), STR_1(13), update@page0_user_input(32), 
 Auto vars:     Size  Location     Type
  i               2   14[BANK0 ] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       2       0       0
      Temps:          0       3       0       0
      Totals:         0       7       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_LCD_Write_Char
 This function is called by:
		_update
		_main
 This function uses a non-reentrant model


 *************** function _LCD_Write_Char *****************
 Defined at:
		line 96 in file "./LCD.h"
 Parameters:    Size  Location     Type
  Data            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  Data            1    8[BANK0 ] unsigned char 
  High4           1    7[BANK0 ] unsigned char 
  Low4            1    6[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       3       0       0
      Temps:          0       1       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_LCD_DATA
 This function is called by:
		_LCD_Write_String
 This function uses a non-reentrant model


 *************** function _LCD_Set_Cursor *****************
 Defined at:
		line 53 in file "./LCD.h"
 Parameters:    Size  Location     Type
  r               1    wreg     unsigned char 
  c               1    7[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  r               1   10[BANK0 ] unsigned char 
  Temp            1   13[BANK0 ] unsigned char 
  High4           1   12[BANK0 ] unsigned char 
  Low4            1   11[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       1       0       0
      Locals:         0       4       0       0
      Temps:          0       2       0       0
      Totals:         0       7       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_LCD_CMD
 This function is called by:
		_update
		_main
 This function uses a non-reentrant model


 *************** function _LCD_Clear *****************
 Defined at:
		line 48 in file "./LCD.h"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_LCD_CMD
 This function is called by:
		_update
		_main
 This function uses a non-reentrant model


 *************** function _LCD_Init *****************
 Defined at:
		line 73 in file "./LCD.h"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       2       0       0
      Totals:         0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_LCD_CMD
		_LCD_DATA
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD_CMD *****************
 Defined at:
		line 37 in file "./LCD.h"
 Parameters:    Size  Location     Type
  CMD             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  CMD             1    6[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       1       0       0
      Totals:         0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_LCD_DATA
 This function is called by:
		_LCD_Clear
		_LCD_Set_Cursor
		_LCD_Init
		_LCD_SL
		_LCD_SR
 This function uses a non-reentrant model


 *************** function _LCD_DATA *****************
 Defined at:
		line 18 in file "./LCD.h"
 Parameters:    Size  Location     Type
  Data            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  Data            1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         0       1       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_LCD_CMD
		_LCD_Init
		_LCD_Write_Char
 This function uses a non-reentrant model


 *************** function _ISR *****************
 Defined at:
		line 146 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       4       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		i1_LCD_Clear
		i1_LCD_Set_Cursor
		i1_LCD_Write_String
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model


 *************** function i1_LCD_Write_String *****************
 Defined at:
		line 113 in file "./LCD.h"
 Parameters:    Size  Location     Type
  str             2    5[COMMON] PTR unsigned char 
		 -> STR_11(1), STR_10(14), STR_9(1), STR_8(13), 
		 -> STR_7(17), STR_6(16), STR_5(1), STR_4(14), 
		 -> STR_3(16), STR_2(16), STR_1(13), update@page0_user_input(32), 
 Auto vars:     Size  Location     Type
  i               2   10[COMMON] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         2       0       0       0
      Temps:          3       0       0       0
      Totals:         7       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		i1_LCD_Write_Char
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function i1_LCD_Write_Char *****************
 Defined at:
		line 96 in file "./LCD.h"
 Parameters:    Size  Location     Type
  Data            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  Data            1    4[COMMON] unsigned char 
  High4           1    3[COMMON] unsigned char 
  Low4            1    2[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         3       0       0       0
      Temps:          1       0       0       0
      Totals:         4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		i1_LCD_DATA
 This function is called by:
		i1_LCD_Write_String
 This function uses a non-reentrant model


 *************** function i1_LCD_Set_Cursor *****************
 Defined at:
		line 53 in file "./LCD.h"
 Parameters:    Size  Location     Type
  r               1    wreg     unsigned char 
  c               1    3[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  r               1    6[COMMON] unsigned char 
  Temp            1    9[COMMON] unsigned char 
  High4           1    8[COMMON] unsigned char 
  Low4            1    7[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         1       0       0       0
      Locals:         4       0       0       0
      Temps:          2       0       0       0
      Totals:         7       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		i1_LCD_CMD
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function i1_LCD_Clear *****************
 Defined at:
		line 48 in file "./LCD.h"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		i1_LCD_CMD
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function i1_LCD_CMD *****************
 Defined at:
		line 37 in file "./LCD.h"
 Parameters:    Size  Location     Type
  CMD             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  CMD             1    2[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          1       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		i1_LCD_DATA
 This function is called by:
		i1_LCD_Clear
		i1_LCD_Set_Cursor
 This function uses a non-reentrant model


 *************** function i1_LCD_DATA *****************
 Defined at:
		line 18 in file "./LCD.h"
 Parameters:    Size  Location     Type
  Data            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  Data            1    0[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          0       0       0       0
      Totals:         1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		i1_LCD_CMD
		i1_LCD_Write_Char
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
./LCD.h
		_LCD_Init      		CODE           	02FF	0000	63
		_LCD_Write_Char		CODE           	027D	0000	65
		_LCD_CMD       		CODE           	044B	0000	19
		_LCD_DATA      		CODE           	042B	0000	32
		_LCD_Set_Cursor		CODE           	01F0	0000	73
		_LCD_Clear     		CODE           	047F	0000	5
		_LCD_Write_String		CODE           	0379	0000	58

./LCD.h estimated size: 315

shared
		i1_LCD_Write_Char		CODE           	033E	0000	59
		__stringtab    		STRING         	0177	0000	16
		i1_LCD_CMD     		CODE           	045E	0000	18
		i1_LCD_Clear   		CODE           	0484	0000	5
		i1_LCD_Set_Cursor		CODE           	02BE	0000	65
		i1_LCD_Write_String		CODE           	03B3	0000	54
		__initialization		CODE           	0011	0000	15
		i1_LCD_DATA    		CODE           	03E9	0000	34

shared estimated size: 266

main.c
		_update        		CODE           	00DB	0000	156
		_ISR           		CODE           	0239	0000	68
		_main          		CODE           	0022	0000	185

main.c estimated size: 409

